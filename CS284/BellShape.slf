### BellShape.slf
#
### A simple starter file to make an object with rotational symmetry
### Sweep a Bezier or B-spline curve around an almostCircle made with a closed B-spline
### -- modify this in small increments
#
### CHS 2009-09-23
######################################


### STANDARD STUFF ###
tclinit {
  set winName .slfWindow
  source SLIDEUI.tcl
  source MATH.tcl
}

### SLIDER BANK ###
tclinit {
  proc CreateSweepUI { parent name } {
    set subname "swp_[subst $name]"

    if { $parent == {} } {
        set root .$subname
    } elseif { $parent == "." } {
        set root .$subname
    } else {
        set root $parent.$subname
  }

    toplevel $root

    set q0x [CreateScale $name $root q0x "q0x"                              0.9   0   2  0.1  1 horizontal]   
    set q0y [CreateScale $name $root q0y "q0y"                              3.0   0   5  0.1  1 horizontal]   
    set q1x [CreateScale $name $root q1x "q1x"                             -2.5  -5   5  0.1  1 horizontal]   
    set q1y [CreateScale $name $root q1y "q1y"                              4.2   0   5  0.1  1 horizontal]   
    set q2x [CreateScale $name $root q2x "q2x"                             -2.4  -5   5  0.1  1 horizontal]   
    set q2y [CreateScale $name $root q2y "q2y"                             -4.8  -5   5  0.1  1 horizontal]   
    set q3x [CreateScale $name $root q3x "q3x"                             -5.0  -5   5  0.1  1 horizontal]   
    set q3y [CreateScale $name $root q3y "q3y"                             -4.0  -5   0  0.1  1 horizontal]   
    set drawControls [CreateScale $name $root drawControls "drawControls"   1     0   1  1    1 horizontal]   
    set uslices [CreateScale $name $root uslices "uslicest"                30     4  60  2    1 horizontal]   
    set vslices [CreateScale $name $root vslices "vslicest"                20     4  40  1    1 horizontal]   

    pack   $q0x $q0y $q1x $q1y $q2x $q2y $q3x $q3y  $drawControls  $uslices  $vslices  -side top -fill x
  }
CreateSweepUI $winName swp
}


### THE PARAMETERIZED PROFILE ###
point q0 ({expr $swp_q0x}  {expr $swp_q0y}  0) endpoint
point q1 ({expr $swp_q1x}  {expr $swp_q1y}  0) endpoint
point q2 ({expr $swp_q2x}  {expr $swp_q2y}  0) endpoint
point q3 ({expr $swp_q3x}  {expr $swp_q3y}  0) endpoint

beziercurve profile1
	controlpointlist ( q0  q1  q2  q3 ) 
        drawcontrols {expr $swp_drawControls}
        slices {expr $swp_vslices}
endbeziercurve

bsplinecurve profile2
	order 4
	controlpointlist ( q0 q0 q0   q1   q2   q3 q3 q3 ) 
        drawcontrols {expr $swp_drawControls}
        slices {expr $swp_vslices}
endbsplinecurve


crosssection xSection   ### PICK JUST ONE OF THEM !
  #     type circle   ### FOR DEBUGGING
  #	type beziercurve profile1
       type bsplinecurve profile2
endcrosssection


### AN ALMOST CIRCULAR SWEEP PATH,   RADIUS SLIGHTLY LESS THAN 1.0  ###
point c_1 ({expr cos(-0.2 * $SLF_PI )} 0  {expr sin(-0.2 * $SLF_PI )} ) endpoint
point c0  ({expr cos(0.0 * $SLF_PI )}  0  {expr sin(0.0 * $SLF_PI )}  ) endpoint
point c1  ({expr cos(0.2 * $SLF_PI )}  0  {expr sin(0.2 * $SLF_PI )}  ) endpoint
point c2  ({expr cos(0.4 * $SLF_PI )}  0  {expr sin(0.4 * $SLF_PI )}  ) endpoint
point c3  ({expr cos(0.6 * $SLF_PI )}  0  {expr sin(0.6 * $SLF_PI )}  ) endpoint
point c4  ({expr cos(0.8 * $SLF_PI )}  0  {expr sin(0.8 * $SLF_PI )}  ) endpoint
point c5  ({expr cos(1.0 * $SLF_PI )}  0  {expr sin(1.0 * $SLF_PI )}  ) endpoint
point c6  ({expr cos(1.2 * $SLF_PI )}  0  {expr sin(1.2 * $SLF_PI )}  ) endpoint
point c7  ({expr cos(1.4 * $SLF_PI )}  0  {expr sin(1.4 * $SLF_PI )}  ) endpoint
point c8  ({expr cos(1.6 * $SLF_PI )}  0  {expr sin(1.6 * $SLF_PI )}  ) endpoint
point c9  ({expr cos(1.8 * $SLF_PI )}  0  {expr sin(1.8 * $SLF_PI )}  ) endpoint
point c10 ({expr cos(2.0 * $SLF_PI )}  0  {expr sin(2.0 * $SLF_PI )}  ) endpoint
point c11 ({expr cos(2.2 * $SLF_PI )}  0  {expr sin(2.2 * $SLF_PI )}  ) endpoint

bsplinecurve almostCircle
    order 4
    controlpointlist ( c11 c10 c9 c8 c7 c6 c5 c4 c3 c2 c1 c0 c_1 )
    closed 1
    drawcontrols {expr $swp_drawControls}
    slices {expr $swp_uslices}
endbsplinecurve

bsplinecurve halfCircle  ### FOR DEBUG
    order 4
    controlpointlist ( c11 c10 c9 c8 c7 c6 c5 c4   )
    drawcontrols {expr $swp_drawControls}
    slices {expr $swp_uslices}
endbsplinecurve

### A SWEEP USING THE ABOVE ELEMENTS ###
## need to start the circular sweep in this direction and at that weird angle, 
## so that the x-axis of the specified profile agrees with the normal direction of the Frenet frame.
sweep rotSweep
  #  path almostCircle  endpath
    path halfCircle  endpath
    crosssection xSection  endcrosssection
    drawsweep 1
    drawpath 1
    solid SLF_HOLLOW
endsweep


### COLORS, MATERIALS ###
surface sGrey    color (0.25 0.25 0.25)  endsurface
surface sBlue    color (0.25 0.25 0.8)   endsurface
surface sRed     color (0.8 0.25 0.25)   endsurface
surface sYellow  color (0.8 0.8 0.25)    endsurface


### ASSEMBLING YOUR SCENE ###
group gAssembly
    instance rotSweep  rotate(1 0 0)(0)  surface sRed  endinstance
    instance profile1  translate(-1 0 0)   endinstance   ### TRANSLATE TO COMPENSATE FOR SWEEP RADIUS
    instance profile2  translate(-1 0 0)   endinstance

     ### PERHAPS OTHER ROTATIONAL SWEEPS TO MAKE A COMPOSITE SHAPE
endgroup

### LIGHTS ###
light amb
  type SLF_AMBIENT
  color (0.4 0.4 0.4)
endlight

light sun
  type SLF_DIRECTIONAL
  color (0.9 0.9 0.9)
endlight

### ILLUMINATING YOUR SCENE ###
group world
  instance gAssembly   
    scale (0.02 0.02 0.02)
    translate (0 0 0.8)
  endinstance

  instance amb
    id main_amb
  endinstance
  instance sun
    id left_sun
    rotate (0 1 0) (-45)
    rotate (0 0 1) (-60)
  endinstance
endgroup

### rendering ###
camera cam
   projection SLF_PARALLEL
  frustum ( -0.2 -0.2 -4 ) ( 0.2 0.2 -0.01 )
endcamera

group gCam
  instance cam
    id iCam
    translate ( 0.0 0.0 1.75 )
  endinstance
endgroup

window Window
  background (0.8 0.9 1)
  origin (0.2 0.01)
  size (0.7 0.7)
endwindow

viewport vp Window
endviewport

render vp gCam.iCam.cam world  
  light world.left_sun.sun
  light world.main_amb.amb
endrender

### END OF FILE #################################

